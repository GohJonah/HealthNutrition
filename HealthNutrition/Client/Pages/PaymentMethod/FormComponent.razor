@inject HttpClient _client

<EditForm Model="@paymentmethod" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled ="@Disabled">

    <div class="form-group">
        <label>Subscription Plan: </label>
        <div>
            <InputSelect @bind-Value="paymentmethod.SubscriptionPlanId" class="form-control">
                <option value=""> -- Select Subscription Plan --</option>
                @if (SubscriptionPlans != null)
                {
                    foreach (var plan in SubscriptionPlans)
                    {
                        <option value="@plan.Id">@plan.SubscriptionPlanName</option>

                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => paymentmethod.SubscriptionPlanId)" />
        </div>
    </div>
    <br />

    <div class="form-group">
        <label> Payment Type: </label>
        <div class="input-group">
            <InputText @bind-Value="paymentmethod.PaymentType" class="form-control" />
            <ValidationMessage For="@(() => paymentmethod.PaymentType)" />
        </div>
    </div>
    <br />

    <div class="form-group">
        <label> Card Number: </label>
        <div class="input-group">
            <InputText @bind-Value="paymentmethod.CardNumber" class="form-control" />
            <ValidationMessage For="@(() => paymentmethod.CardNumber)" />
        </div>
    </div>
    <br />

    <div class="form-group">
        <label> Expiry Date: </label>
        <div class="input-group">
            <InputText @bind-Value="paymentmethod.ExpiryDate" class="form-control" />
            <ValidationMessage For="@(() => paymentmethod.ExpiryDate)" />
        </div>
    </div>
    <br />

    <div class="form-group">
        <label> Security Code: </label>
        <div class="input-group">
            <InputText @bind-Value="paymentmethod.SecurityCode" class="form-control" />
            <ValidationMessage For="@(() => paymentmethod.SecurityCode)" />
        </div>
    </div>
    <br />

    <div class="form-group">
        <label> Email Address: </label>
        <div class="input-group">
            <InputText @bind-Value="paymentmethod.EmailAddress" class="form-control" />
            <ValidationMessage For="@(() => paymentmethod.EmailAddress)" />
        </div>
    </div>
    <br />
    </fieldset>

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block" style="border: 3px solid white;">
            @ButtonText
        </button>
    }

    <BackToList Target="paymentmethods" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public PaymentMethod? paymentmethod { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<SubscriptionPlan>? SubscriptionPlans;

    protected async override Task OnInitializedAsync()
    {
        SubscriptionPlans = await _client.GetFromJsonAsync<List<SubscriptionPlan>>($"{Endpoints.SubscriptionPlansEndpoint}");
    }
}
